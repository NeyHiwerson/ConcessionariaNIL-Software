<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>